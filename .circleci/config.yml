version: 2

orbs:
  gcp-cli: circleci/gcp-cli@2.2.0
workflows:
  version: 2
  CI:
    jobs:
      - npm-install
      - test:
          requires:
            - npm-install
      # - test-e2e:
      #     requires:
      #       - npm-install
      - lint:
          requires:
            - npm-install
      - build-app:
          requires:
            - npm-install
      - signadot:
          requires:
            - build-app

node-defaults: &NODE
  working_directory: ~/workspace
  docker:
    - image: circleci/node:10.18-browsers

checkout-workspace-defaults:
  - &CHECKOUT-WORKSPACE
    attach_workspace:
      at: ~/workspace

jobs:
  # NPM install
  npm-install:
    <<: *NODE
    steps:
      - checkout
      - *CHECKOUT-WORKSPACE
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
  # Tests
  test:
    <<: *NODE
    steps:
      - checkout
      - *CHECKOUT-WORKSPACE
      - run: npm run test
      - store_test_results:
          path: coverage/junit
      - store_artifacts:
          path: coverage
      - persist_to_workspace:
          root: .
          paths:
            - coverage
  # Code quality
  lint:
    <<: *NODE
    steps:
      - checkout
      - *CHECKOUT-WORKSPACE
      - run: npm run lint
  # Build
  build-app:
    <<: *NODE
    steps:
      - checkout
      - *CHECKOUT-WORKSPACE
      - run: npm run build -- --base-href "./"
      - store_artifacts:
          path: dist
      - persist_to_workspace:
          root: .
          paths:
            - dist

  docker:
    description: Build and push docker image
    executor: machine
    steps:
      - checkout
      - *CHECKOUT-WORKSPACE
      - gcp-cli/install
      - gcp-cli/initialize
      - run:
          command: |
            docker build -t gcr.io/celo-testnet/celostats-frontend:$CIRCLE_SHA1 .
            docker push gcr.io/celo-testnet/celostats-frontend:$CIRCLE_SHA1

  # Signadot Canary Deployment
  signadot:
    <<: *NODE
    steps:
      - run:
          command: |
              imageReplacements=()
              imageReplacements+=('{"name": "gcr.io/celo-testnet/celostats-frontend", "newTag": "$CIRCLE_SHA1"}')

              printf -v joined '%s,' "${imageReplacements[@]}"
              echo ${joined%,}
              payload=$(cat <<EOF
              {
                "cluster": "celo-networks-dev",
                "namespace": "staging",
                "defaultService": "staging-celostats-frontend",
                "defaultServicePort": 80,
                "images": [ ${joined%,} ]
              }
              EOF
              )
              RESULT=$(curl -H 'Content-Type: application/json' \
                    -H "Authorization: ApiKey $SIGNADOT_API_KEY" \
                    -d "${payload}" \
              https://api.signadot.com/api/v1/repos/celo-org/celostats-frontend/pulls/$CIRCLE_PR_NUMBER/workspaces)
              echo $RESULT
              ERROR=$(jq -r '.error' <<< $RESULT)
              if [ $ERROR != "null" ]; then
                echo "error: $ERROR"
                exit 1
              fi
